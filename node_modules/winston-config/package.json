{
  "name": "winston-config",
  "description": "A helper to easily configure winston",
  "version": "0.4.2",
  "homepage": "https://github.com/triplem/winston-config",
  "author": {
    "name": "Markus M. May",
    "email": "mmay@javafreedom.org",
    "url": "http://www.javafreedom.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/triplem/winston-config.git"
  },
  "bugs": {
    "url": "https://github.com/triplem/winston-config/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/triplem/winston-config/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/winston-config",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt travis"
  },
  "dependencies": {
    "lodash": "~1.2.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.4.3",
    "grunt-contrib-watch": "~0.4.3",
    "grunt-mocha-hack": "~0.1.0",
    "grunt-exec": "~0.4.0",
    "grunt-contrib-clean": "~0.4",
    "grunt-mocha-cov": "~0.0.7",
    "mocha": "~1.9.0",
    "mocha-lcov-reporter": "~0.0.1",
    "should": "~1.2.2",
    "travis-cov": "~0.2.4",
    "blanket": "~1.1.4",
    "winston": "~0.7.1",
    "winston-email": "~0.0.8",
    "winston-mongodb": "~0.4.0"
  },
  "keywords": [
    "logging",
    "config",
    "winston",
    "json",
    "log"
  ],
  "readme": "# winston-config [![Build Status](https://travis-ci.org/triplem/winston-config.png?branch=master)](http://travis-ci.org/triplem/winston-config) [![Dependency Status](https://gemnasium.com/triplem/winston-config.png)](https://gemnasium.com/triplem/winston-config) [![NPM version](https://badge.fury.io/js/winston-config.png)](http://badge.fury.io/js/winston-config) [![Coverage Status](https://coveralls.io/repos/triplem/winston-config/badge.png)](https://coveralls.io/r/triplem/winston-config)\n\nA module to easily configure [winston](http://github.com/flatiron/winston) via json files.\n\n## Motivation\n[winston](https://github.com/flatiron/winston) is designed to be a simple and universal logging library with support for multiple transports.\nThere is IMHO a need to easily configure this fine logging library via easy json files, without the need of working with\nthe winston api.\n\nwinston-config offers configuration of multiple winston loggers via json files.\n\n## Usage\nYou do have to put the `winston` dependency into your package.json. winston-config will not work correctly without this dependency\nin your package.json. This is due to the [module caching caveats](http://nodejs.org/api/modules.html#modules_module_caching_caveats)\nof the nodejs module loading. winston-config does not install a dependency to winston, this makes sure, that winston-config is using\nthe same module as your application (see also [Modules Loading from Node Modules folders](http://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders)).\n\nOtherwise the used winston module would be another file and therefor it would not be the cached one used by your application\nand therefor the configuration could not be as easily used in your application. (Unfortunately this is quite hard to test\nin the test cases and therefor no test for this is in the test-cases).\n\nwinston-config can be used like described below:\n\n``` js\n  var path = require('path')\n    , winstonConf = require('winston-config');\n\n  winstonConf.fromFile(path.join(__dirname, '../config/example-winston-config.json'), callback(error, winston) {\n    if (error) {\n      console.log('error during winston configuration');\n    } else {\n      console.log('everything alright');\n    }\n  });\n```\n\nRight now, winston-config offers the following methods:\n\n* `fromFile`\ncalling a json-file and using it for the configuration of winston. This is an async method.\n\n* `fromJson`\naccepts a JS Object to configure winston (well in reality this method is called by the `fromFile` and does nothing else\nthen adding the config to winston). This method is an async method.\n\n* `fromFileSync`\ndoes pretty much the same as the fromFile method, but does this synchronously. This is especially useful for the\ninitialization phase of an application. This method logs errors via console.log and returns always a valid winston\ninstance. The returned winston instance is configured with the given file configuration if everything went okay,\notherwise an untouched winston instance is returned.\n\nIf you do have the requirement to just use a single logger, you could use [build-winston](http://github.com/flexbean/build-winston).\nWe are right now in discussions to merge these two projects.\n\nA configuration file should look like (see directory config or test):\n\n``` js\n{\n  \"logging\": {\n    \"application\": {\n      \"console\": {\n        \"level\": \"info\",\n        \"colorize\": true\n      },\n      \"file\": {\n        \"timestamp\": true,\n        \"json\": false,\n        \"filename\": \"logs/app.log\",\n        \"maxfiles\": 5,\n        \"maxsize\": 10485760,\n        \"level\": \"info\"\n      }\n    },\n    \"http\": {\n      \"console\": {\n        \"level\": \"warn\",\n        \"colorize\": true\n      },\n      \"file\": {\n        \"timestamp\": true,\n        \"json\": false,\n        \"filename\": \"logs/http.log\",\n        \"maxfiles\": 5,\n        \"maxsize\": 10485760,\n        \"level\": \"info\"\n      }\n    }\n  }\n}\n```\n\nThe `logging` is the only fixed one, all other can be adapted by the user of the library. After the call to the\nwinston-config with a correct filename (using the above configuration), the logger can be called via\n\n``` js\nvar winston = require('winston');\n\nvar appLogger = winston.loggers.get('application');\nvar httpLogger = winston.loggers.get('http');\n\n// this will appear in the console as well as the logs/app.log file\nappLogger.info('LOGMESSAGE');\n\n// this will not appear in the console, but in the logs/http.log file\nhttpLogger.info('ANOTHER LOGMESSAGE');\n```\n\nLike already stated, the name `application` can be configured. If there is no configuration for this logger, the default\nvalues of winston are used. The default transport is always `console` and the default level is `silly` if there is no\nlogger configured, if it is configured without a level, the level `info` is used.\n\nIf you would like to use other logging transports instead of console and/or file, feel free to configure those by name,\nbut make sure, that you do require those before the first usage of winston in your application.\n\nDetailed information can be found in the tests for this project.\n\nHope it helps, and you are able to use it. If there are any problems, do not hesitate to open an issue or write a message\nto the author of this project.\n\nAn application using this module is [Agora](https://github.com/softwerkskammer/NeuePlattform-Implementierung) from\nthe Softwerkskammer Germany.\n\n## LICENSE\n\nCopyright (c) 2013 Markus M. May\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "winston-config@0.4.2",
  "dist": {
    "shasum": "ae47eccd70587adde8f5271327c7eaba8ecb62b0"
  },
  "_from": "winston-config@",
  "_resolved": "https://registry.npmjs.org/winston-config/-/winston-config-0.4.2.tgz"
}
